#Gesamtnetzwerk ohne Jahr nur Autor

# Paket laden
library(igraph)

# edgelist einlesen
# edgelist muss in der working directory liegen bzw. mÃ¼ssen Sie entsprechend ihrer edgelist umbenennen
# ich habe den Datensatz auf mein Github geschoben
pr <- read.csv("https://raw.githubusercontent.com/im041/Coaching-Slot-/master/edge-oj.csv", header=T, as.is=T, sep = ",")

# edgelist prÃ¼fen
pr

# edgelist umwandeln in igraph-objekt
pr <- graph_from_data_frame(pr, directed=T)

# igraph-Objekt prÃ¼fen
pr

#Netzwerkma?e
components(pr)
is_connected(pr)
diameter(pr)
edge_density(pr)
mean_distance(pr)

#Clusteranzahl
cluster_walktrap(pr)
#Geaue Clusteranalyse
gc<-cluster_walktrap(pr)          
modularity(gc)
membership(gc)
plot(gc,pr,edge.arrow.size=.2)

#ZentralitÃ¤t des Netzwerks
degree(pr,mode="in")

# 879 Knoten mit 1227 Edges
# nur vertex Attribut "name"

# Neues Vertex-Attribut "ind" erstellen, basierend auf der Berechnung vom indegree nach degree(pr, mode = "in")
V(pr)$ind = degree(pr, mode = "in")
pr

# prÃ¼fen, ob das Vertex-Attribut erstellt wurde
list.vertex.attributes(pr)

# zeigt uns alle zugewiesenen indegrees in pr an: man sieht, dass es nur wenige Ã¼ber 2 gibt.
V(pr)$ind

# Teilnetzwerk erstellen, indem alle Knoten gelÃ¶scht werden, die einen Indegree-Wert von kleiner als 2 haben

pr1 <- delete_vertices(pr, V(pr)[ind == "1"])
pr2 <- delete_vertices(pr1, V(pr1)[ind == "2"])
pr3 <- delete_vertices(pr2, V(pr2)[ind == "3"])
plot(pr2)
pr4 <- delete_vertices(pr3, V(pr3)[ind == "4"])
pr5 <- delete_vertices(pr4, V(pr4)[ind == "5"])
plot(pr5)
pr6 <- delete_vertices(pr5, V(pr5)[ind == "6"])
pr7 <- delete_vertices(pr6, V(pr6)[ind == "7"])
pr8 <-delete_vertices(pr7, V(pr7)[ind == "0"])
plot(pr8)

vertex_attr(pr8)
pr1
#mehrfache Edges werden aufadiert/vereinfacht, kann dann noch nach KantenstÃ¤rke verdickt werden
prf<-simplify(pr8, edge.attr.comb = list(weight="sum"))
plot(prf, vertex.size=degree(prf)*3)
prf

# Teilnetzwerk prÃ¼fen
pr_plus2
vertex_attr(pr_plus2)

# zeigt, dass alle indegree-Werte mit 1 gelÃ¶scht wurden, auch die hohen Werte von gestern sind mit dabei.
V(pr_plus1)$ind

# Kleine Visualisierung
plot(pr_plus1, vertex.size=degree(pr_plus1, mode="in"), edge.arrow.size=0.05, vertex.label.cex=.5, vertex.label.color="black", layout = layout_with_fr, main="Zitationsnetzwerk PR-EinfÃ¼hrungsliteratur", sub = "Visualisierung nach Indegree-Verteilung, indegree > 1")

#anders benennen
pr_plus2<- delete_vertices(pr, V(pr)[ind == "2"])

# Ohne Labels
plot(pr_plus1, vertex.size=degree(pr_plus1, mode="in"), edge.arrow.size=0.05, layout = layout_with_fr, main="Zitationsnetzwerk PR-EinfÃ¼hrungsliteratut", sub = "Visualisierung nach Indegree-Verteilung, indegree > 1")

##Egonetzwerke, um Zitationen deutlicher zu machen

###Egonetzwerk Bentele 
egobentele <- subgraph <- make_ego_graph(pr, order=1, c("Bentele"))
plot(egobentele[[1]], edge.arrow.size=.1)

###Egonetzwerk HuckSandhu###
egohucksandhu <- subgraph <- make_ego_graph(pr, order=1, c("HuckSandhu"))
plot(egohucksandhu[[1]], edge.arrow.size=.1)

###Egonetzwerk SzyszkaP###
egoszyszkap <- subgraph <- make_ego_graph(pr, order=1, c("SzyszkaP"))
plot(egoszyszkap[[1]], edge.arrow.size=.1)

###Egonetzwerk Bruhn###
egobruhn <- subgraph <- make_ego_graph(pr, order=1, c("Bruhn"))
plot(egobruhn[[1]], edge.arrow.size=.1)

###Egonetzwerk Luhmann###
egoluhmann <- subgraph <- make_ego_graph(pr, order=1, c("Luhmann"))
plot(egoluhmann[[1]], edge.arrow.size=.1)

###Egonetzwerk Merten###
egomerten <- subgraph <- make_ego_graph(pr, order=1, c("Merten"))
plot(egomerten[[1]], edge.arrow.size=.1)

###Egonetzwerk RoettgerU###
egoroettgeru <- subgraph <- make_ego_graph(pr, order=1, c("RoettgerU"))
plot(egoroettgeru[[1]], edge.arrow.size=.1)
